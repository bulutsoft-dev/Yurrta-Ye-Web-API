// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YurttaYe.Infrastructure.Persistence;

#nullable disable

namespace YurttaYe.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250518114507_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("YurttaYe.Domain.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("YurttaYe.Domain.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("YurttaYe.Domain.Entities.Menu", b =>
                {
                    b.OwnsOne("YurttaYe.Domain.ValueObjects.CalorieRange", "TotalCalorie", b1 =>
                        {
                            b1.Property<int>("MenuId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("MenuId");

                            b1.ToTable("Menus");

                            b1.WithOwner()
                                .HasForeignKey("MenuId");

                            b1.OwnsOne("YurttaYe.Domain.ValueObjects.Calorie", "Max", b2 =>
                                {
                                    b2.Property<int>("CalorieRangeMenuId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<decimal>("Value")
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("MaxCalorie");

                                    b2.HasKey("CalorieRangeMenuId");

                                    b2.ToTable("Menus");

                                    b2.WithOwner()
                                        .HasForeignKey("CalorieRangeMenuId");
                                });

                            b1.OwnsOne("YurttaYe.Domain.ValueObjects.Calorie", "Min", b2 =>
                                {
                                    b2.Property<int>("CalorieRangeMenuId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<decimal>("Value")
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("MinCalorie");

                                    b2.HasKey("CalorieRangeMenuId");

                                    b2.ToTable("Menus");

                                    b2.WithOwner()
                                        .HasForeignKey("CalorieRangeMenuId");
                                });

                            b1.Navigation("Max")
                                .IsRequired();

                            b1.Navigation("Min")
                                .IsRequired();
                        });

                    b.Navigation("TotalCalorie")
                        .IsRequired();
                });

            modelBuilder.Entity("YurttaYe.Domain.Entities.MenuItem", b =>
                {
                    b.HasOne("YurttaYe.Domain.Entities.Menu", null)
                        .WithMany("Items")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("YurttaYe.Domain.ValueObjects.Calorie", "Calorie", b1 =>
                        {
                            b1.Property<int>("MenuItemId")
                                .HasColumnType("INTEGER");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("CalorieValue");

                            b1.HasKey("MenuItemId");

                            b1.ToTable("MenuItems");

                            b1.WithOwner()
                                .HasForeignKey("MenuItemId");
                        });

                    b.OwnsOne("YurttaYe.Domain.ValueObjects.Gramaj", "Gramaj", b1 =>
                        {
                            b1.Property<int>("MenuItemId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("TEXT")
                                .HasColumnName("GramajUnit");

                            b1.Property<decimal>("Value")
                                .HasColumnType("TEXT")
                                .HasColumnName("GramajValue");

                            b1.HasKey("MenuItemId");

                            b1.ToTable("MenuItems");

                            b1.WithOwner()
                                .HasForeignKey("MenuItemId");
                        });

                    b.OwnsOne("YurttaYe.Domain.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("MenuItemId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("TEXT")
                                .HasColumnName("PriceCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PriceValue");

                            b1.HasKey("MenuItemId");

                            b1.ToTable("MenuItems");

                            b1.WithOwner()
                                .HasForeignKey("MenuItemId");
                        });

                    b.Navigation("Calorie");

                    b.Navigation("Gramaj")
                        .IsRequired();

                    b.Navigation("Price");
                });

            modelBuilder.Entity("YurttaYe.Domain.Entities.Menu", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
